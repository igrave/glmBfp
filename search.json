[{"path":[]},{"path":"https://igrave.github.io/glmBfp/articles/examples.html","id":"pima-indians-diabetes-data","dir":"Articles","previous_headings":"","what":"Pima Indians diabetes data","title":"Using `glmBfp`: a binary regression example","text":"look Pima Indians diabetes data, available package MASS:","code":"library(MASS) pima <- rbind(Pima.tr, Pima.te) pima$hasDiabetes <- as.numeric(pima$type == \"Yes\") pima.nObs <- nrow(pima)"},{"path":"https://igrave.github.io/glmBfp/articles/examples.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Using `glmBfp`: a binary regression example","text":"n=532n=532 women Pima Indian heritage, seven possible predictors presence diabetes recorded. like investigate binary regression, relevant, form statistical association – linear effect, rather nonlinear effect? model possible nonlinear effects fractional polynomials. First, need decide prior distributions use. going use generalised hyper-gg priors GLMs (Sabanés Bové Held 2011). automatic supposed yield reasonable results. need specify hyper-prior put factor gg. One possible choice Zellner-Siow hyper-prior says g∼IG(1/2,n/2)g \\sim \\mathrm{IG}(1/2, n/2): corresponds F1 prior Sabanés Bové Held (2011). Another possible choice hyper-g/ng/n prior. special constructor function, instead can directly specify log prior density, follows:","code":"library(glmBfp)  ## define the prior distributions for g which we are going to use: prior <- InvGammaGPrior(a=1/2,                          b=pima.nObs/2) ## Warning in validityMethod(as(object, superClass)): density must be proper and ## normalized: (numerical) integral is 1.00000013575921 ## (the warning can be ignored) ## You may also use the hyper-g/n prior: prior.f2 <- CustomGPrior(logDens=function(g)                           - log(pima.nObs) - 2 * log(1 + g / pima.nObs))"},{"path":"https://igrave.github.io/glmBfp/articles/examples.html","id":"stochastic-model-search","dir":"Articles","previous_headings":"","what":"Stochastic model search","title":"Using `glmBfp`: a binary regression example","text":"Next, stochastic search (large) model space find “good” models. decide model prior, example use sparse type also used paper. use chainlength 100100, small enough illustration purposes (usually one use least 1000010\\,000 rule thumb), save models (general nModels number models saved visited models). Finally, decide want use OpenMP acceleration (parallelise loops observations cores processor) want higher order correction Laplace approximations. order able reproduce analysis, advisable set seed random number generator starting stochastic search. see search took 00~seconds, 9 models found. Now, want table found models, posterior probability, log marginal likelihood, log prior probability, powers every covariate number times sampler encountered model: Note frequency refers frequency models sampling chain, thus providing Monte Carlo estimate posterior model probabilities, posterior refers renormalised posterior model probabilities. latter advantage ratios posterior probabilities two models exact, former unbiased (obviously larger variance).","code":"set.seed(102) time.pima <-     system.time(models.pima <-                 glmBayesMfp(type ~                              bfp(npreg) +                              bfp(glu) +                              bfp(bp) +                             bfp(skin) +                              bfp(bmi) +                              bfp(ped) +                              bfp(age),                             data=pima,                             family=binomial(\"logit\"),                             priorSpecs=                             list(gPrior=prior,                                  modelPrior=\"sparse\"),                             nModels=1e3L,                             chainlength=1e1L,                             method=\"sampling\",                             useOpenMP=FALSE,                             higherOrderCorrection=TRUE)) ## Starting sampler... ## 0%______________________________________________________________________________________________100% ## ---------- ## Number of non-identifiable model proposals:     0 ## Number of total cached models:                  9 ## Number of returned models:                      9 time.pima ##    user  system elapsed  ##   0.132   0.003   0.135 attr(models.pima, \"numVisited\") ## [1] 9 table.pima <- as.data.frame(models.pima) table.pima ##      posterior logMargLik   logPrior age bmi bp glu npreg ped skin ## 1 5.752526e-01  -265.8779 -11.849169              1           -0.5 ## 2 4.036782e-01  -266.2321 -11.849169              2           -0.5 ## 3 7.971175e-03  -270.1569 -11.849169              2              3 ## 4 6.638447e-03  -268.2604 -13.928611          0   2           -0.5 ## 5 6.134410e-03  -272.4983  -9.769728              2                ## 6 3.250886e-04  -273.3564 -11.849169          3   2                ## 7 2.089908e-20  -310.6396 -11.849169   2                      -0.5 ## 8 2.131992e-23  -317.5274 -11.849169                    2        3 ## 9 2.726801e-31  -339.8609  -7.690286"},{"path":"https://igrave.github.io/glmBfp/articles/examples.html","id":"inclusion-probabilities","dir":"Articles","previous_headings":"","what":"Inclusion probabilities","title":"Using `glmBfp`: a binary regression example","text":"estimated marginal inclusion probabilities covariates also saved:","code":"round(attr(models.pima, \"inclusionProbs\"),2) ##   age   bmi    bp   glu npreg   ped  skin  ##  0.00  0.00  0.01  1.00  0.00  0.00  0.99"},{"path":"https://igrave.github.io/glmBfp/articles/examples.html","id":"sampling-model-parameters","dir":"Articles","previous_headings":"","what":"Sampling model parameters","title":"Using `glmBfp`: a binary regression example","text":"now want look estimated covariate effects estimated MAP model configuration given last seven columns table.pima, first need generate parameter samples model: function McmcOptions, defined S4 object MCMC settings, comprising number iterations, length burn-, thinning step (save every second iteration), acceptance rate 0.870.87). Note can also get predictive samples new data points via newdata option sampleGlm. result mapSamples following structure: list acceptanceRatio Metropolis-Hastings proposals, MCMC estimate log marginal likelihood including associated standard error (logMargLik), coefficients samples model, S4 object samples. S4 object includes fitted samples linear predictor scale (case log Odds Ratio scale), possibly predictions samples, samples intercept (fixed), samples z=log(g)z=\\log(g), samples fractional polynomial curves (bfpCurves), coefficients uncertain fixed form covariates (ucCoefs), shifts scales applied original covariates (shiftScaleMax) number samples (nSamples). can read details results help page typing ?\"GlmBayesMfpSamples-class\" R. wanted get posterior fitted values probability scale, can use following code: can also analyse MCMC output greater detail applying functions coda package:","code":"## MCMC settings mcmcOptions <- McmcOptions(iterations=1e4L,                            burnin=1e3L,                            step=2L)  ## get samples from the MAP model set.seed(634) mapSamples <- sampleGlm(models.pima[1L],                          mcmc=mcmcOptions,                         useOpenMP=FALSE) ##  ## Taking the linear approximation method ## 0%______________________________________________________________________________________________100% ## ---------------------------------------------------------------------------------------------------- ## Finished MCMC simulation with acceptance ratio 0.868 str(mapSamples) ## List of 5 ##  $ tbf            : logi FALSE ##  $ acceptanceRatio: num 0.868 ##  $ logMargLik     :List of 5 ##   ..$ estimate                      : Named num -266 ##   .. ..- attr(*, \"names\")= chr \"numeratorTerms\" ##   ..$ standardError                 : num [1, 1] 0.00237 ##   ..$ numeratorTerms                : num [1:4500] 0.542 0.657 0.664 0.619 0.559 ... ##   ..$ denominatorTerms              : num [1:4500] 1 1 0.989 1 1 ... ##   ..$ highDensityPointLogUnPosterior: num -266 ##  $ coefficients   : num [1:3, 1:4500] -0.932 4.211 -5.46 -0.827 3.745 ... ##   ..- attr(*, \"dimnames\")=List of 2 ##   .. ..$ : chr [1:3] \"(Intercept)\" \"glu^1\" \"skin^-0.5\" ##   .. ..$ : NULL ##  $ samples        :Formal class 'GlmBayesMfpSamples' [package \"glmBfp\"] with 8 slots ##   .. ..@ fitted       : num [1:532, 1:4500] -2.29 2.55 -2.11 1.66 -1.6 ... ##   .. .. ..- attr(*, \"dimnames\")=List of 2 ##   .. .. .. ..$ : chr [1:532] \"1\" \"2\" \"3\" \"4\" ... ##   .. .. .. ..$ : NULL ##   .. ..@ predictions  : logi[0 , 0 ]  ##   .. ..@ fixCoefs     :List of 1 ##   .. .. ..$ (Intercept): num [1, 1:4500] -0.932 -0.827 -0.932 -0.936 -1.073 ... ##   .. .. .. ..- attr(*, \"dimnames\")=List of 2 ##   .. .. .. .. ..$ : chr \"(Intercept)\" ##   .. .. .. .. ..$ : NULL ##   .. ..@ z            : num [1:4500] 5.32 5.44 7.19 5.08 5.57 ... ##   .. ..@ bfpCurves    :List of 2 ##   .. .. ..$ glu : num [1:327, 1:4500] -3.05 -3.02 -3.01 -2.99 -2.96 ... ##   .. .. .. ..- attr(*, \"scaledGrid\")= num [1:327, 1] 0.56 0.567 0.57 0.574 0.581 ... ##   .. .. .. .. ..- attr(*, \"dimnames\")=List of 2 ##   .. .. .. .. .. ..$ : NULL ##   .. .. .. .. .. ..$ : chr \"glu\" ##   .. .. .. ..- attr(*, \"whereObsVals\")= int [1:532] 62 318 40 251 113 88 55 313 197 163 ... ##   .. .. ..$ skin: num [1:251, 1:4500] -3.67 -3.47 -3.28 -3.25 -3.11 ... ##   .. .. .. ..- attr(*, \"scaledGrid\")= num [1:251, 1] 0.7 0.746 0.791 0.8 0.837 ... ##   .. .. .. .. ..- attr(*, \"dimnames\")=List of 2 ##   .. .. .. .. .. ..$ : NULL ##   .. .. .. .. .. ..$ : chr \"skin\" ##   .. .. .. ..- attr(*, \"whereObsVals\")= int [1:532] 67 83 108 115 57 63 76 28 25 95 ... ##   .. ..@ ucCoefs      : list() ##   .. ..@ shiftScaleMax: num [1:7, 1:4] 0 0 0 0 1 0 0 10 100 100 ... ##   .. .. ..- attr(*, \"dimnames\")=List of 2 ##   .. .. .. ..$ : chr [1:7] \"age\" \"bmi\" \"bp\" \"glu\" ... ##   .. .. .. ..$ : chr [1:4] \"shift\" \"scale\" \"maxDegree\" \"cardPowerset\" ##   .. ..@ nSamples     : int 4500 mapFit <- rowMeans(plogis(mapSamples$samples@fitted)) head(mapFit) ##         1         2         3         4         5         6  ## 0.1017081 0.8967206 0.1096366 0.7864968 0.1794264 0.1412198 library(coda)  coefMcmc <- mcmc(data=t(mapSamples$coefficients),                  start=mcmcOptions@burnin + 1,                  thin=mcmcOptions@step) str(coefMcmc) ##  'mcmc' num [1:4500, 1:3] -0.932 -0.827 -0.932 -0.936 -1.073 ... ##  - attr(*, \"dimnames\")=List of 2 ##   ..$ : NULL ##   ..$ : chr [1:3] \"(Intercept)\" \"glu^1\" \"skin^-0.5\" ##  - attr(*, \"mcpar\")= num [1:3] 1001 9999 2 ## standard summary table for the coefficients: summary(coefMcmc) ##  ## Iterations = 1001:9999 ## Thinning interval = 2  ## Number of chains = 1  ## Sample size per chain = 4500  ##  ## 1. Empirical mean and standard deviation for each variable, ##    plus standard error of the mean: ##  ##                Mean     SD Naive SE Time-series SE ## (Intercept) -0.9298 0.1144 0.001705       0.001812 ## glu^1        3.8503 0.3963 0.005907       0.006548 ## skin^-0.5   -4.0626 1.0093 0.015046       0.017079 ##  ## 2. Quantiles for each variable: ##  ##               2.5%    25%    50%     75%   97.5% ## (Intercept) -1.158 -1.008 -0.929 -0.8514 -0.7113 ## glu^1        3.085  3.581  3.846  4.0998  4.6522 ## skin^-0.5   -6.053 -4.736 -4.057 -3.3781 -2.1071 autocorr(coefMcmc) ## , , (Intercept) ##  ##          (Intercept)        glu^1   skin^-0.5 ## Lag 0    1.000000000 -0.198545301  0.22364820 ## Lag 2    0.060585352 -0.021893505  0.02726208 ## Lag 10  -0.009556659  0.011005546  0.02048678 ## Lag 20  -0.008033578  0.001619819 -0.02348717 ## Lag 100  0.009020242 -0.025143099 -0.01664317 ##  ## , , glu^1 ##  ##          (Intercept)        glu^1    skin^-0.5 ## Lag 0   -0.198545301  1.000000000  0.033350565 ## Lag 2   -0.015649028  0.102578846 -0.011644669 ## Lag 10  -0.006802564 -0.007056528 -0.009870305 ## Lag 20   0.025457688 -0.016328556 -0.004131432 ## Lag 100  0.010054085  0.004816710  0.006559926 ##  ## , , skin^-0.5 ##  ##         (Intercept)         glu^1     skin^-0.5 ## Lag 0    0.22364820  0.0333505649  1.0000000000 ## Lag 2    0.05308624  0.0007788738  0.0863690518 ## Lag 10   0.01053958 -0.0013760573  0.0004120856 ## Lag 20  -0.02397061  0.0008594714 -0.0206584865 ## Lag 100 -0.02560623 -0.0044481063 -0.0312199772 ## etc.  plot(coefMcmc) ## samples of z: zMcmc <- mcmc(data=mapSamples$samples@z,               start=mcmcOptions@burnin + 1,               thin=mcmcOptions@step) plot(zMcmc) ## etc."},{"path":"https://igrave.github.io/glmBfp/articles/examples.html","id":"curve-estimates","dir":"Articles","previous_headings":"","what":"Curve estimates","title":"Using `glmBfp`: a binary regression example","text":"Now can use samples plot estimated effects MAP model covariates, plotCurveEstimate function. example:","code":"plotCurveEstimate(termName=\"skin\",                   samples=mapSamples$samples)"},{"path":"https://igrave.github.io/glmBfp/articles/examples.html","id":"model-averaging","dir":"Articles","previous_headings":"","what":"Model averaging","title":"Using `glmBfp`: a binary regression example","text":"Model averaging works principle similar sampling single model, multiple model configurations supplied respective log posterior probabilities. example, wanted average top three models found, following: internally, first models sampled, sampled model many samples drawn determined model frequency model average sample. result list two elements: modelData similar table.pima, contains addition BMA probability frequency sample, MCMC acceptance ratios (high). second element samples, class GlmBayesMfpSamples, presented functions can applied (e.g. plotCurveEstimate).","code":"set.seed(312) bmaSamples <-      sampleBma(models.pima[1:3],               mcmc=mcmcOptions,               useOpenMP=FALSE,               nMargLikSamples=1000) ##  ## Starting sampling ... ## Now at model  1 ... ## Taking the linear approximation method ## 0%______________________________________________________________________________________________100% ## ---------------------------------------------------------------------------------------------------- ## Finished MCMC simulation with acceptance ratio 0.875  ##  ## Now at model  2 ... ## Taking the linear approximation method ## 0%______________________________________________________________________________________________100% ## ----------------------------------------------------------------------------------------------------- ## Finished MCMC simulation with acceptance ratio 0.864  ##  ## Now at model  3 ... ## Taking the linear approximation method ## 0%______________________________________________________________________________________________100% ## ---------------------------------------------------------------------------------------------------- ## Finished MCMC simulation with acceptance ratio 0.886 ## look at the list element names: names(bmaSamples) ## [1] \"modelData\" \"samples\" ## now we can see how close the MCMC estimates (\"margLikEstimate\") ## are to the ILA estimates (\"logMargLik\") of the log marginal likelihood: bmaSamples$modelData[, c(\"logMargLik\", \"margLikEstimate\")] ##   logMargLik margLikEstimate ## 1  -265.8779       -265.8792 ## 2  -266.2321       -266.2333 ## 3  -270.1569       -270.1514 ## the \"samples\" list is again of class \"GlmBayesMfpSamples\": class(bmaSamples$samples) ## [1] \"GlmBayesMfpSamples\" ## attr(,\"package\") ## [1] \"glmBfp\""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isaac Gravestock. Author, maintainer. Daniel Sabanes Bove. Author. David Maisonave. Contributor. Terry Therneau. Contributor. R Core Team. Contributor.","code":""},{"path":"https://igrave.github.io/glmBfp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sabanes Bove, D. Held, L. (2011): Hyper-g priors generalized linear models. Bayesian Analysis, 6(3):387-410. URL: http://projecteuclid.org/euclid.ba/1339616469","code":"@Article{,   title = {Hyper-g priors for generalized linear models},   author = {Daniel {Sabanes Bove} and Leonhard Held},   journal = {Bayesian Analysis},   year = {2011},   volume = {6},   number = {3},   pages = {387--410},   url = {http://projecteuclid.org/euclid.ba/1339616469}, }"},{"path":"https://igrave.github.io/glmBfp/index.html","id":"glmbfp","dir":"","previous_headings":"","what":"Bayesian Fractional Polynomials for GLMs","title":"Bayesian Fractional Polynomials for GLMs","text":"Bayesian GLMs model selection shrinkage.","code":""},{"path":"https://igrave.github.io/glmBfp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Fractional Polynomials for GLMs","text":"can install development version glmBfp GitHub :","code":"# install.packages(\"pak\") pak::pak(\"igrave/glmBfp\")"},{"path":"https://igrave.github.io/glmBfp/reference/CustomGPrior-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The custom g-prior class — CustomGPrior-class","title":"The custom g-prior class — CustomGPrior-class","text":"class wraps around custom log prior density covariance factor g.","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/CustomGPrior.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the custom g-prior class — CustomGPrior","title":"Constructor for the custom g-prior class — CustomGPrior","text":"Constructor custom g-prior class","code":""},{"path":"https://igrave.github.io/glmBfp/reference/CustomGPrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the custom g-prior class — CustomGPrior","text":"","code":"CustomGPrior(logDens)"},{"path":"https://igrave.github.io/glmBfp/reference/CustomGPrior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the custom g-prior class — CustomGPrior","text":"logDens log prior density function g","code":""},{"path":"https://igrave.github.io/glmBfp/reference/CustomGPrior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the custom g-prior class — CustomGPrior","text":"new CustomGPrior object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/Extract.GlmBayesMfp.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract method for GlmBayesMfp objects — Extract.GlmBayesMfp","title":"Extract method for GlmBayesMfp objects — Extract.GlmBayesMfp","text":"Extract subset models GlmBayesMfp object.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/Extract.GlmBayesMfp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract method for GlmBayesMfp objects — Extract.GlmBayesMfp","text":"","code":"# S3 method for class 'GlmBayesMfp' x[...]"},{"path":"https://igrave.github.io/glmBfp/reference/Extract.GlmBayesMfp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract method for GlmBayesMfp objects — Extract.GlmBayesMfp","text":"x valid GlmBayesMfp object ... transports indexes models","code":""},{"path":"https://igrave.github.io/glmBfp/reference/Extract.GlmBayesMfp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract method for GlmBayesMfp objects — Extract.GlmBayesMfp","text":"subsetted object.","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/Extract.GlmBayesMfp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract method for GlmBayesMfp objects — Extract.GlmBayesMfp","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/GPrior-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The virtual g-prior class — GPrior-class","title":"The virtual g-prior class — GPrior-class","text":"virtual g-prior class g-prior classes derive. slots : logDens prior log density","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/GlmBayesMfpSamples-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for samples from a single GlmBayesMfp model or a model average — GlmBayesMfpSamples-class","title":"Class for samples from a single GlmBayesMfp model or a model average — GlmBayesMfpSamples-class","text":"Class samples single GlmBayesMfp model model average","code":""},{"path":"https://igrave.github.io/glmBfp/reference/GlmBayesMfpSamples-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class for samples from a single GlmBayesMfp model or a model average — GlmBayesMfpSamples-class","text":"Note model average, nSamples typically ** number samples available bfp curve, e.g. fitted fit samples linear predictor scale (nObs x nSamples) predictions samples predictive distribution new data linear predictor scale, newdata provided (nrow(newdata) x nSamples) fixCoefs intercept fixed covariate samples z log covariance factor samples bfpCurves samples fractional polynomial function values evaluated grids, contains one list element FP. element matrix layout nGridPoints x nSamples. ucCoefs uncertain fixed form covariates coefficients samples, contains one list element fixed form covariate group. element matrix layout nCoefs x nSamples. shiftScaleMax transformation parameters nSamples number samples","code":""},{"path":"https://igrave.github.io/glmBfp/reference/GlmBayesMfpSamples-subsetting.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset method for GlmBayesMfpSamples objects — GlmBayesMfpSamples-subsetting","title":"Subset method for GlmBayesMfpSamples objects — GlmBayesMfpSamples-subsetting","text":"Index samples select subset samples.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/GlmBayesMfpSamples-subsetting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset method for GlmBayesMfpSamples objects — GlmBayesMfpSamples-subsetting","text":"","code":"# S4 method for class 'GlmBayesMfpSamples,ANY,missing,missing' x[i]"},{"path":"https://igrave.github.io/glmBfp/reference/GlmBayesMfpSamples-subsetting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset method for GlmBayesMfpSamples objects — GlmBayesMfpSamples-subsetting","text":"x GlmBayesMfpSamples object vector defining subset samples","code":""},{"path":"https://igrave.github.io/glmBfp/reference/GlmBayesMfpSamples-subsetting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset method for GlmBayesMfpSamples objects — GlmBayesMfpSamples-subsetting","text":"subset class.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/GlmBayesMfpSamples-subsetting.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Subset method for GlmBayesMfpSamples objects — GlmBayesMfpSamples-subsetting","text":"function call fail saved bfpCurves ucCoefs enough samples subset !","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The hyper-g prior class — HypergPrior-class","title":"The hyper-g prior class — HypergPrior-class","text":"slots : hyperparameter","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior-initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization method for the ","title":"Initialization method for the ","text":"Initialization method \"HypergPrior\" class","code":""},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior-initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization method for the ","text":"","code":"# S4 method for class 'HypergPrior' initialize(.Object, a, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior-initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization method for the ","text":".Object HypergPrior want initialize hyperparameter value ... unused","code":""},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior-initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization method for the ","text":"initialized object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior-initialize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initialization method for the ","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the hyper-g prior class — HypergPrior","title":"Constructor for the hyper-g prior class — HypergPrior","text":"Constructor hyper-g prior class","code":""},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the hyper-g prior class — HypergPrior","text":"","code":"HypergPrior(a = 4)"},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the hyper-g prior class — HypergPrior","text":"hyperparameter must larger 3, larger 4 order favour much shrinkage priori (default: 4)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/HypergPrior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the hyper-g prior class — HypergPrior","text":"new HypergPrior object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The incomplete inverse gamma g-prior class — IncInvGammaGPrior-class","title":"The incomplete inverse gamma g-prior class — IncInvGammaGPrior-class","text":"slots : first hyperparameter b second hyperparameter","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior-initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization method for the ","title":"Initialization method for the ","text":"Initialization method \"IncInvGammaGPrior\" class","code":""},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior-initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization method for the ","text":"","code":"# S4 method for class 'IncInvGammaGPrior' initialize(.Object, a, b, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior-initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization method for the ","text":".Object IncInvGammaGPrior want initialize first hyperparameter value b second hyperparameter value ... unused","code":""},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior-initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization method for the ","text":"initialized object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior-initialize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initialization method for the ","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the incomplete inverse gamma g-prior class — IncInvGammaGPrior","title":"Constructor for the incomplete inverse gamma g-prior class — IncInvGammaGPrior","text":"Constructor incomplete inverse gamma g-prior class","code":""},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the incomplete inverse gamma g-prior class — IncInvGammaGPrior","text":"","code":"IncInvGammaGPrior(a = 0.001, b = 0.001)"},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the incomplete inverse gamma g-prior class — IncInvGammaGPrior","text":"first positive hyperparameter (default: 0.001) b second positive hyperparameter (default: 0.001)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/IncInvGammaGPrior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the incomplete inverse gamma g-prior class — IncInvGammaGPrior","text":"new IncInvGammaGPrior object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The inverse gamma g-prior class — InvGammaGPrior-class","title":"The inverse gamma g-prior class — InvGammaGPrior-class","text":"slots : first hyperparameter b second hyperparameter","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior-initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization method for the ","title":"Initialization method for the ","text":"Initialization method \"InvGammaGPrior\" class","code":""},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior-initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization method for the ","text":"","code":"# S4 method for class 'InvGammaGPrior' initialize(.Object, a, b, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior-initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization method for the ","text":".Object InvGammaGPrior want initialize first hyperparameter value b second hyperparameter value ... unused","code":""},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior-initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization method for the ","text":"initialized object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior-initialize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initialization method for the ","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the inverse gamma g-prior class — InvGammaGPrior","title":"Constructor for the inverse gamma g-prior class — InvGammaGPrior","text":"Constructor inverse gamma g-prior class","code":""},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the inverse gamma g-prior class — InvGammaGPrior","text":"","code":"InvGammaGPrior(a = 0.001, b = 0.001)"},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the inverse gamma g-prior class — InvGammaGPrior","text":"first positive hyperparameter (default: 0.001) b second positive hyperparameter (default: 0.001)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/InvGammaGPrior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the inverse gamma g-prior class — InvGammaGPrior","text":"new InvGammaGPrior object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/McmcOptions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the three canonical MCMC options — McmcOptions-class","title":"Class for the three canonical MCMC options — McmcOptions-class","text":"slots : iterations number MCMC iterations burnin number burn-iterations saved step every step-th iteration saved burn-","code":""},{"path":"https://igrave.github.io/glmBfp/reference/McmcOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for class McmcOptions — McmcOptions","title":"Constructor for class McmcOptions — McmcOptions","text":"Note argument samples included convenience - can specify instead iterations.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/McmcOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for class McmcOptions — McmcOptions","text":"","code":"McmcOptions(   iterations = as.integer(burnin + (step * samples)),   burnin = 10000L,   step = 10L,   samples = 10000L )"},{"path":"https://igrave.github.io/glmBfp/reference/McmcOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for class McmcOptions — McmcOptions","text":"iterations number MCMC iterations (default: 110,000) burnin number burn-iterations saved (default: 10,000) step every step-th iteration saved burn-(default: 10) samples number resulting samples (default 10,000 result)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/McmcOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for class McmcOptions — McmcOptions","text":"freshly built object class McmcOptions","code":""},{"path":"https://igrave.github.io/glmBfp/reference/SMARTfull.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputed and transformed data extract from the SMART study — SMARTfull","title":"Imputed and transformed data extract from the SMART study — SMARTfull","text":"Data SMART study, prospective cohort study University Medical Centre Utrecht, Netherlands. study designed () establish prevalence concomitant arterial diseases risk factors cardiovascular disease high-risk population; (b) identify predictors future cardiovascular events patients symptomatic cardiovascular disease.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/SMARTfull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputed and transformed data extract from the SMART study — SMARTfull","text":"","code":"data(\"SMARTfull\")"},{"path":"https://igrave.github.io/glmBfp/reference/SMARTfull.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Imputed and transformed data extract from the SMART study — SMARTfull","text":"data frame 3873 observations following 16 variables. TEVENT numeric vector. Time cardiovascular event (days) EVENT logical vector. Cardiovascular event (clinical, 0/1) AGE.TRANS numeric vector. (Age(years)-50)^2 50, otherwise 0 SEX numeric vector. 1 Male 2 Female SMOKING factor levels 1 Never 2 Former 3 Current ALCOHOL factor levels 1 Never 2 Former 3 Current BMI numeric vector (imputed). Body mass index (kg/m^2) SYSTH numeric vector (imputed).  Systomlic blood pressure (mm/Hg) HDL numeric vector (imputed). High-density lipoprotein cholesterol (mmol/L) DIABETES numeric vector (imputed). Ever diabetes (0/1) HISTCAR2 numeric vector. History cardiac disease score. HOMOC numeric vector (imputed). Homocysteine (\\(\\mu\\)mol/L logCREAT numeric vector (imputed). Creatinine clearance (log mL/min) ALBUMIN factor levels 1 2 Micro 3 Macro. Albumin urine STENOSIS numeric vector (imputed). Carotic stenosis \\(\\ge 50\\%\\) duplex IMT numeric vector (imputed). Intima media thickness (mm)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/SMARTfull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Imputed and transformed data extract from the SMART study — SMARTfull","text":"SMARTfull processed extract SMART study. code processing available: http://www.clinicalpredictionmodels.org/doku.php?id=rcode_and_data:chapter23. dataset named SMARTc code, used fit \"full\" model, discussed Chapter 23 Steyerberg's Clinical Prediction Models.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/SMARTfull.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Imputed and transformed data extract from the SMART study — SMARTfull","text":"http://www.clinicalpredictionmodels.org","code":""},{"path":"https://igrave.github.io/glmBfp/reference/SMARTfull.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputed and transformed data extract from the SMART study — SMARTfull","text":"Steyerberg, E.W. (2009) Clinical Prediction Models. New York: Springer-Verlag","code":""},{"path":"https://igrave.github.io/glmBfp/reference/SMARTfull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputed and transformed data extract from the SMART study — SMARTfull","text":"","code":"data(SMARTfull)"},{"path":"https://igrave.github.io/glmBfp/reference/as.data.frame.GlmBayesMfp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a GlmBayesMfp object into a data frame — as.data.frame.GlmBayesMfp","title":"Convert a GlmBayesMfp object into a data frame — as.data.frame.GlmBayesMfp","text":"Convert GlmBayesMfp object data frame","code":""},{"path":"https://igrave.github.io/glmBfp/reference/as.data.frame.GlmBayesMfp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a GlmBayesMfp object into a data frame — as.data.frame.GlmBayesMfp","text":"","code":"# S3 method for class 'GlmBayesMfp' as.data.frame(x, row.names = NULL, ..., freq = FALSE)"},{"path":"https://igrave.github.io/glmBfp/reference/as.data.frame.GlmBayesMfp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a GlmBayesMfp object into a data frame — as.data.frame.GlmBayesMfp","text":"x valid GlmBayesMfp object row.names optional rownames (default keep names GlmBayesMfp list) ... unused freq empirical frequencies models sampling path given? (default)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/as.data.frame.GlmBayesMfp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a GlmBayesMfp object into a data frame — as.data.frame.GlmBayesMfp","text":"data frame following columns: posterior posterior model probabilities logMargLik log marginal likelihood models logPrior log prior probabilities models Additionally, uncertain fixed form covariates column inclusion status, fractional polynomial column powers returned.","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/as.data.frame.GlmBayesMfp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a GlmBayesMfp object into a data frame — as.data.frame.GlmBayesMfp","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/boxTidwell.html","id":null,"dir":"Reference","previous_headings":"","what":"Box Tidwell transformation — boxTidwell","title":"Box Tidwell transformation — boxTidwell","text":"Simple function apply Box Tidwell transformation vector, (single) power provided.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/boxTidwell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box Tidwell transformation — boxTidwell","text":"","code":"x %bt% pow"},{"path":"https://igrave.github.io/glmBfp/reference/boxTidwell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box Tidwell transformation — boxTidwell","text":"x numeric vector pow single power","code":""},{"path":"https://igrave.github.io/glmBfp/reference/boxTidwell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box Tidwell transformation — boxTidwell","text":"transformed vector","code":""},{"path":"https://igrave.github.io/glmBfp/reference/computeModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute model information for a given list of model configurations and glmBayesMfp output. — computeModels","title":"Compute model information for a given list of model configurations and glmBayesMfp output. — computeModels","text":"want compute marginal likelihood information necessary generating posterior samples new models encountered model search done glmBayesMfp, function can used: Provide models configurations interpreted context object class GlmBayesMfp. result latter class, contains new models (similarly whole model space consist exhaustive search conducted).","code":""},{"path":"https://igrave.github.io/glmBfp/reference/computeModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute model information for a given list of model configurations and glmBayesMfp output. — computeModels","text":"","code":"computeModels(   configurations,   object,   verbose = length(configurations) > 100L,   debug = FALSE )"},{"path":"https://igrave.github.io/glmBfp/reference/computeModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute model information for a given list of model configurations and glmBayesMfp output. — computeModels","text":"configurations list model configurations object GlmBayesMfp object verbose verbose? (default: 100 configurations) debug even verbose echo debug-level information? (default)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/computeModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute model information for a given list of model configurations and glmBayesMfp output. — computeModels","text":"GlmBayesMfp object new models. can directly used input sampleGlm.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/computeModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute model information for a given list of model configurations and glmBayesMfp output. — computeModels","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/constructNewdataMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the covariates matrix for new data based on an existing GlmBayesMfp object — constructNewdataMatrix","title":"Construct the covariates matrix for new data based on an existing GlmBayesMfp object — constructNewdataMatrix","text":"internal function, constructs model matrix new covariate data, based formula scaling info existing GlmBayesMfp object. matrix can passed prediction functions.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/constructNewdataMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the covariates matrix for new data based on an existing GlmBayesMfp object — constructNewdataMatrix","text":"","code":"constructNewdataMatrix(object, newdata)"},{"path":"https://igrave.github.io/glmBfp/reference/constructNewdataMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the covariates matrix for new data based on an existing GlmBayesMfp object — constructNewdataMatrix","text":"object valid GlmBayesMfp-Object newdata new covariate data data.frame (covariate names call glmBayesMfp)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/constructNewdataMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the covariates matrix for new data based on an existing GlmBayesMfp object — constructNewdataMatrix","text":"(uncentered!) model matrix FP columns shifted scaled original data.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/convert2Mcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert samples to mcmc objects — convert2Mcmc","title":"Convert samples to mcmc objects — convert2Mcmc","text":"Convert samples mcmc objects","code":""},{"path":"https://igrave.github.io/glmBfp/reference/convert2Mcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert samples to mcmc objects — convert2Mcmc","text":"","code":"convert2Mcmc(samples, mcmcOptions)"},{"path":"https://igrave.github.io/glmBfp/reference/convert2Mcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert samples to mcmc objects — convert2Mcmc","text":"samples samples matrix vector mcmcOptions McmcOptions object chosen production samples","code":""},{"path":"https://igrave.github.io/glmBfp/reference/convert2Mcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert samples to mcmc objects — convert2Mcmc","text":"S3 class “mcmc” object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/coxTBF.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Cox models using glmBayesMfp — coxTBF","title":"Fit Cox models using glmBayesMfp — coxTBF","text":"simplified formula based interface glmBayesMfp fit Cox models. Can return Maximum posteriori (MAP) model, Median probability model (MPM) Bayesian model average (BMA). Provides global empirical Bayes AIC/BIC based model inference.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/coxTBF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Cox models using glmBayesMfp — coxTBF","text":"","code":"coxTBF(   formula,   data,   type = \"MAP\",   baseline = \"shrunk\",   globalEB = FALSE,   IC = FALSE,   sep = FALSE,   keepModelList = FALSE,   ...,   overrideConfig )"},{"path":"https://igrave.github.io/glmBfp/reference/coxTBF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Cox models using glmBayesMfp — coxTBF","text":"formula model formula Surv object LHS uc bfp variables RHS. data data.frame model variables type type model fit, one \"MAP\",\"MPM\",\"BMA\",\"BMAFull\" baseline calculate baseline hazard function. \"cox\" uses unshrunken coefficients. \"shrunk\" refits baseline shrunken coefficients (default). globalEB use global empirical bayes estimate g (default=FALSE) IC use information criteria based model selection (default=FALSE). Either \"AIC\" \"BIC\". sep estimate baseline hazard estimate model coefficients (default=FALSE). keepModelList keep model list returned glmBayesMfp MAP MPM models (default=FALSE). ... additional arguments pass glmBayesMfp overrideConfig replaces MAP model given configuration, passed computeModels","code":""},{"path":"https://igrave.github.io/glmBfp/reference/coxTBF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Cox models using glmBayesMfp — coxTBF","text":"object S3 class TBFcox TBFcox.sep sep=TRUE.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppBfgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to the internal C++ optimization routine ","title":"Interface to the internal C++ optimization routine ","text":"Interface internal C++ optimization routine \"bfgs\"","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppBfgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to the internal C++ optimization routine ","text":"","code":"cppBfgs(   x0,   f_,   min.x = c(-Inf),   max.x = c(+Inf),   prec = 1e-05,   verbose = FALSE )"},{"path":"https://igrave.github.io/glmBfp/reference/cppBfgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to the internal C++ optimization routine ","text":"x0 start value f_ target function min.x minimum bound x (default -Inf) max.x maximum bound x (default +Inf) prec precision (default 1e-5) verbose verbose? (default)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppBfgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to the internal C++ optimization routine ","text":"list following elements: par minimum abscissa found algorithm inv.hessian inverse Hessian par evaluations list function evaluation pairs: args vals code convergence code. 0 “OK”, -1 “lost precision”, +1 “change large enough”","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppBfgs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to the internal C++ optimization routine ","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppOptimize.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to the internal C++ optimization routine ","title":"Interface to the internal C++ optimization routine ","text":"Interface internal C++ optimization routine \"optimize\"","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppOptimize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to the internal C++ optimization routine ","text":"","code":"cppOptimize(f_, min.x, max.x, prec = .Machine$double.eps^0.25)"},{"path":"https://igrave.github.io/glmBfp/reference/cppOptimize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to the internal C++ optimization routine ","text":"f_ function min.x minimum bound x max.x maximum bound x prec precision (default original optimize function)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppOptimize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to the internal C++ optimization routine ","text":"list following elements: par minimum abscissa found algorithm inv.hessian inverse Hessian par evaluations list function evaluation pairs: args vals","code":""},{"path":"https://igrave.github.io/glmBfp/reference/cppOptimize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to the internal C++ optimization routine ","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/empiricalHpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an empirical HPD interval from samples — empiricalHpd","title":"Construct an empirical HPD interval from samples — empiricalHpd","text":"Construct empirical highest posterior density (HPD) interval samples drawn distribution quantity interest.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/empiricalHpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an empirical HPD interval from samples — empiricalHpd","text":"","code":"empiricalHpd(theta, level)"},{"path":"https://igrave.github.io/glmBfp/reference/empiricalHpd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an empirical HPD interval from samples — empiricalHpd","text":"theta vector samples level credible level","code":""},{"path":"https://igrave.github.io/glmBfp/reference/empiricalHpd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct an empirical HPD interval from samples — empiricalHpd","text":"vector estimated lower upper bounds HPD interval.","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/evalZdensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the (negative log) unnormalized marginal z density in a given model. — evalZdensity","title":"Evaluate the (negative log) unnormalized marginal z density in a given model. — evalZdensity","text":"Based result list glmBayesMfp, first model list, marginal z density can evaluated.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/evalZdensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the (negative log) unnormalized marginal z density in a given model. — evalZdensity","text":"","code":"evalZdensity(   config,   object,   zValues,   conditional = FALSE,   debug = FALSE,   higherOrderCorrection = FALSE )"},{"path":"https://igrave.github.io/glmBfp/reference/evalZdensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the (negative log) unnormalized marginal z density in a given model. — evalZdensity","text":"config configuration single GlmBayesMfp model. null model allowed. interpreted context object. object GlmBayesMfp object zValues z values conditional return approximate *conditional* density f(y | z)? (default) debug print debugging information? (default) higherOrderCorrection higher-order correction Laplace approximation used? (default)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/evalZdensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the (negative log) unnormalized marginal z density in a given model. — evalZdensity","text":"negative log marginal unnormalized density values zValues. (Note words “negative”, “log”, “unnormalized” !!!)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark a covariate for transformation with fractional polynomials — bfp","title":"Mark a covariate for transformation with fractional polynomials — bfp","text":"Using function, can mark covariate transformation fractional polynomials formula glmBayesMfp. Using function, can mark covariate group combined covariates joint variable selection (“uncertain covariate fixed form covariate groups”) formula glmBayesMfp.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark a covariate for transformation with fractional polynomials — bfp","text":"","code":"bfp(x, max = 2, scale = TRUE, rangeVals = NULL)  uc(x)"},{"path":"https://igrave.github.io/glmBfp/reference/formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark a covariate for transformation with fractional polynomials — bfp","text":"x covariate name max maximum degree FP scale use pre-transformation shifting scaling avoid numerical problems? rangeVals extra numbers shifting scaling consider values range","code":""},{"path":"https://igrave.github.io/glmBfp/reference/formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark a covariate for transformation with fractional polynomials — bfp","text":"name provided covariate, function parameters  attached attributes Just name provided covariate","code":""},{"path":"https://igrave.github.io/glmBfp/reference/fpScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift and scale a covariate vector (if wished) to have positive and small numbers. — fpScale","title":"Shift and scale a covariate vector (if wished) to have positive and small numbers. — fpScale","text":"function (almost exactly) copied package “mfp” consistent.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/fpScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift and scale a covariate vector (if wished) to have positive and small numbers. — fpScale","text":"","code":"fpScale(x, scaling = TRUE)"},{"path":"https://igrave.github.io/glmBfp/reference/fpScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift and scale a covariate vector (if wished) to have positive and small numbers. — fpScale","text":"x covariate vector scaling shifting scaling performed (default)?","code":""},{"path":"https://igrave.github.io/glmBfp/reference/fpScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift and scale a covariate vector (if wished) to have positive and small numbers. — fpScale","text":"list ‘shift’ ‘scale’ parameters appropriate covariate vector.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/fpTrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform formula variables — fpTrans","title":"Transform formula variables — fpTrans","text":"Simple function apply Box Tidwell transformation variables formula. Variable first shifted scaled NewVar = (Var+shift)/scale transformed optionally centered. Can used formulas poly() .","code":""},{"path":"https://igrave.github.io/glmBfp/reference/fpTrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform formula variables — fpTrans","text":"","code":"fpTrans(var, powers = 1, scale = 1, shift = 0, center = TRUE)"},{"path":"https://igrave.github.io/glmBfp/reference/fpTrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform formula variables — fpTrans","text":"var variable transform powers one powers scale value scale variable shifting (default=1) shift value shift variable (default=0) center center variable tranforming.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/fpTrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform formula variables — fpTrans","text":"transformed vector","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getDesignMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the design matrix for a given bfp GLM model — getDesignMatrix","title":"Construct the design matrix for a given bfp GLM model — getDesignMatrix","text":"internal function construct (centered) design matrix given bfp GLM model.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getDesignMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the design matrix for a given bfp GLM model — getDesignMatrix","text":"","code":"getDesignMatrix(   modelConfig = object[[1]]$configuration,   object,   intercept = TRUE,   center = TRUE )"},{"path":"https://igrave.github.io/glmBfp/reference/getDesignMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the design matrix for a given bfp GLM model — getDesignMatrix","text":"modelConfig model configuration list must elements “powers” “powers”. Defaults configuration first element object GlmBayesMfp object, needed contains covariates matrix indices vector intercept return intercept column inside matrix (default) ? center data centered (default) ?","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getDesignMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the design matrix for a given bfp GLM model — getDesignMatrix","text":"design matrix, non-fixed part columnwise centered (, colmeans zero).","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getFamily.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for glmBayesMfp: Extracts an S3 family object — getFamily","title":"Helper function for glmBayesMfp: Extracts an S3 family object — getFamily","text":"Extracts S3 family object, (least) usual elements \"family\", \"link\", \"linkfun\", \"linkinv\", \"variance\", \"mu.eta\", \"dev.resids\", plus additional elements: \"phi\" includes just dispersion parameter used, \"simulate\" can generate random variates given linear predictor weight vector (function course also uses \"phi\" value)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getFamily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for glmBayesMfp: Extracts an S3 family object — getFamily","text":"","code":"getFamily(family, phi)"},{"path":"https://igrave.github.io/glmBfp/reference/getFamily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for glmBayesMfp: Extracts an S3 family object — getFamily","text":"family family argument passed glmBayesMfp phi dispersion argument passed glmBayesMfp","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getFamily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for glmBayesMfp: Extracts an S3 family object — getFamily","text":"returned family object also includes custom ‘init’ function, takes response vector (matrix) (‘y’) corresponding weight vector (‘weights’), processes response vector ‘y’ possibly altered weights ‘weights’, includes starting values ‘mustart’ IWLS algorithm. example, binomial special case two-column-response matrix treated exactly way glm.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getFpTransforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the FP transforms matrix of a given covariate vector — getFpTransforms","title":"Get the FP transforms matrix of a given covariate vector — getFpTransforms","text":"Get (centered) FP transforms matrix given covariate vector, corresponding power vector (least one element) provided.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getFpTransforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the FP transforms matrix of a given covariate vector — getFpTransforms","text":"","code":"getFpTransforms(vec, powers, center = TRUE)"},{"path":"https://igrave.github.io/glmBfp/reference/getFpTransforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the FP transforms matrix of a given covariate vector — getFpTransforms","text":"vec positive (== already shifted scaled) column vector proper colname powers power vector least one element center center columns FP transforms matrix around zero? (default)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getFpTransforms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the FP transforms matrix of a given covariate vector — getFpTransforms","text":"FP transforms matrix proper colnames.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getGenerator.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function which gets the generator (and normalizing constant) — getGenerator","title":"Internal helper function which gets the generator (and normalizing constant) — getGenerator","text":"Internal helper function gets generator (normalizing constant)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getGenerator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function which gets the generator (and normalizing constant) — getGenerator","text":"","code":"getGenerator(method, unnormDensFun, xVals, unnormDensVals)"},{"path":"https://igrave.github.io/glmBfp/reference/getGenerator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function which gets the generator (and normalizing constant) — getGenerator","text":"method methods string unnormDensFun unnormalized density function xVals x values unnormDensVals unnormalized density values","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getGenerator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper function which gets the generator (and normalizing constant) — getGenerator","text":"list elements “generator” “normConst”, containing generator function (argument n number samples) normalizing constant density, respectively.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getGenerator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal helper function which gets the generator (and normalizing constant) — getGenerator","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getLogGPrior.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for glmBayesMfp: Returns the normalized log g prior density — getLogGPrior","title":"Helper function for glmBayesMfp: Returns the normalized log g prior density — getLogGPrior","text":"Returns normalized log prior density g R function. checked result valid, exp(f) integrates 1 positive real line.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getLogGPrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for glmBayesMfp: Returns the normalized log g prior density — getLogGPrior","text":"","code":"getLogGPrior(gPrior)"},{"path":"https://igrave.github.io/glmBfp/reference/getLogGPrior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for glmBayesMfp: Returns the normalized log g prior density — getLogGPrior","text":"gPrior gPrior argument passed glmBayesMfp","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getLogGPrior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for glmBayesMfp: Returns the normalized log g prior density — getLogGPrior","text":"R function.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getLogMargLikEstimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Chib-Jeliazkov log marginal likelihood estimate from the MCMC output — getLogMargLikEstimate","title":"Compute the Chib-Jeliazkov log marginal likelihood estimate from the MCMC output — getLogMargLikEstimate","text":"Compute Chib-Jeliazkov log marginal likelihood estimate MCMC output","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getLogMargLikEstimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Chib-Jeliazkov log marginal likelihood estimate from the MCMC output — getLogMargLikEstimate","text":"","code":"getLogMargLikEstimate(   numeratorTerms,   denominatorTerms,   highDensityPointLogUnPosterior,   endLag = 40L )"},{"path":"https://igrave.github.io/glmBfp/reference/getLogMargLikEstimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Chib-Jeliazkov log marginal likelihood estimate from the MCMC output — getLogMargLikEstimate","text":"numeratorTerms terms sum numerator posterior density ordinate estimate high density point denominatorTerms terms sum denominator posterior density ordinate estimate high density point highDensityPointLogUnPosterior log unnormalized posterior (.e. likelihood times prior) high density point endLag lag covariance incorporate uncertainty? (default: 40)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getLogMargLikEstimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Chib-Jeliazkov log marginal likelihood estimate from the MCMC output — getLogMargLikEstimate","text":"list resulting “estimate” “standardError”.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getMarginalZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a (smooth) marginal z density approximation from a model information list — getMarginalZ","title":"Construct a (smooth) marginal z density approximation from a model information list — getMarginalZ","text":"Construct (smooth) marginal z density approximation model information list","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getMarginalZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a (smooth) marginal z density approximation from a model information list — getMarginalZ","text":"","code":"getMarginalZ(   info,   method = c(\"linear\", \"spline\", \"logspline\", \"normalspline\", \"normal\"),   verbose = FALSE,   plot = FALSE )"},{"path":"https://igrave.github.io/glmBfp/reference/getMarginalZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a (smooth) marginal z density approximation from a model information list — getMarginalZ","text":"info model information list method method approximating marginal density: linear Linearly interpolate points. spline saved points unnormalized density approximation joined “monotonic” spline. density smoothed zero tails. Since spline might slightly negative extreme values, positive part returned. logspline saved points log unnormalized density approximation joined “monotonic” spline, exponentiated. normalspline “monotonic” spline fitted differences saved log density values log normal approximation. resulting spline function exponentiated multiplied normal density. normal Just take normal approximation. verbose Echo chosen method? (default) plot produce plots different approximation steps? (default)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getMarginalZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a (smooth) marginal z density approximation from a model information list — getMarginalZ","text":"list log normalized density approximation (“logDens”) random number generator (“gen”).","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getModelCoefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate shrunken coefficients from GlmBayesMfp object for Cox model — getModelCoefs","title":"Estimate shrunken coefficients from GlmBayesMfp object for Cox model — getModelCoefs","text":"internal function estimate shrunken coefficients GlmBayesMfp object Cox models. calls sampleBma calculates coefficents based linear fit.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getModelCoefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate shrunken coefficients from GlmBayesMfp object for Cox model — getModelCoefs","text":"","code":"getModelCoefs(model.listpart, mcmc, sep = FALSE, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/getModelCoefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate shrunken coefficients from GlmBayesMfp object for Cox model — getModelCoefs","text":"model.listpart glmBfp object construct survival formula sep coefficients returned separately (default=FALSE) ... additional arguments pass sampleBma","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getModelCoefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate shrunken coefficients from GlmBayesMfp object for Cox model — getModelCoefs","text":"named vector coefficients.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getUncenteredDesignMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the design matrix for a given bfp GLM model — getUncenteredDesignMatrix","title":"Construct the design matrix for a given bfp GLM model — getUncenteredDesignMatrix","text":"internal function construct UNCENTERED design matrix given bfp GLM model.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getUncenteredDesignMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the design matrix for a given bfp GLM model — getUncenteredDesignMatrix","text":"","code":"getUncenteredDesignMatrix(   modelConfig = object[[1]]$configuration,   object,   fixedColumns = TRUE )"},{"path":"https://igrave.github.io/glmBfp/reference/getUncenteredDesignMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the design matrix for a given bfp GLM model — getUncenteredDesignMatrix","text":"modelConfig model configuration list must elements “powers” “powers”. Defaults configuration first element object GlmBayesMfp object, needed contains covariates matrix indices vector fixedColumns return fixed columns inside matrix (default) ?","code":""},{"path":"https://igrave.github.io/glmBfp/reference/getUncenteredDesignMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the design matrix for a given bfp GLM model — getUncenteredDesignMatrix","text":"design matrix, non-fixed part columnwise centered (, colmeans zero).","code":""},{"path":"https://igrave.github.io/glmBfp/reference/glmBayesMfp.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian model inference for fractional polynomial GLMs and Cox models — glmBayesMfp","title":"Bayesian model inference for fractional polynomial GLMs and Cox models — glmBayesMfp","text":"Bayesian model inference fractional polynomial models generalized linear model family Cox model conducted means either exhaustive model space evaluation posterior model sampling. approach based analytical marginal likelihood approximations, using integrated Laplace approximation. Alternatively, test-based Bayes factors (TBFs) used.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/glmBayesMfp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian model inference for fractional polynomial GLMs and Cox models — glmBayesMfp","text":"","code":"glmBayesMfp(   formula = formula(data),   censInd = NULL,   data = parent.frame(),   weights,   offset,   family,   phi = 1,   tbf = FALSE,   empiricalBayes = FALSE,   fixedg = NULL,   priorSpecs = list(gPrior = HypergPrior(), modelPrior = \"sparse\"),   method = c(\"ask\", \"exhaustive\", \"sampling\"),   subset,   na.action = na.omit,   verbose = TRUE,   debug = FALSE,   nModels,   nCache = 1e+09,   chainlength = 10000,   nGaussHermite = 20,   useBfgs = FALSE,   largeVariance = 100,   useOpenMP = TRUE,   higherOrderCorrection = FALSE,   fixedcfactor = FALSE,   empiricalgPrior = FALSE,   centerX = TRUE )"},{"path":"https://igrave.github.io/glmBfp/reference/glmBayesMfp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian model inference for fractional polynomial GLMs and Cox models — glmBayesMfp","text":"formula model formula censInd censoring indicator. Default NULL, non-NULL vector supplied, assumed logical (TRUE = observed, FALSE = censored) Cox regression performed. data optional data.frame model variables (defaults parent frame) weights optionally vector positive weights (provided, vector one's) offset can used specify _a priori_ known component included linear predictor fitting. must numeric vector length equal number cases (provided, vector zeroes) family distribution link (glm function). Needs explicitly specified models except Cox model. phi value dispersion parameter (defaults 1) tbf Use TBF methodology compute marginal likelihood? (default) Must TRUE Cox regression done. empiricalBayes rank models terms conditional marginal likelihood, using empirical Bayes estimate g? (default) Due coding structure, prior g must given priorSpecs although effect empiricalBayes==TRUE. fixedg number, taken fixed value g, empiricalBayes option, models ranked terms conditional marginal likelihood. default, option NULL, means g estimated fully empirical Bayesian way. priorSpecs prior specifications, see details method method used explore  posterior model space? (default: ask user) subset optional subset expression na.action default skip rows missing data, option supported moment verbose information computation progress given? (default) debug print debugging information? (default) nModels many best models saved? (default: 1% total number (cached) models). Must larger nCache method == \"sampling\". nCache maximum number best models cached time model sampling, effect method = sampling chainlength length model sampling chain (effect sampling chosen method) nGaussHermite number quantiles used Gauss Hermite quadrature marginal likelihood approximation (later MCMC sampler approximation marginal covariance factor density). empiricalBayes fixed g used, option effect. useBfgs Shall BFGS algorithm used internal maximization (default)? Else, default Brent optimize routine used, seems robust. empiricalBayes fixed g used, option effect always Brent optimize routine used. largeVariance BFGS variance estimate considered “large”, reestimation computed? (effect useBfgs == TRUE, default: 100) useOpenMP shall OpenMP used accelerate computations? (default) higherOrderCorrection higher-order correction Laplace approximation used, works canonical GLMs? (default) fixedcfactor TRUE sets c factor assuming alpha set 0. Otherwise take alpha=mean(y) empiricalgPrior TRUE uses observed isnformation matrix instead X'X g prior. (Experimental) centerX Center data fitting (FALSE)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/glmBayesMfp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian model inference for fractional polynomial GLMs and Cox models — glmBayesMfp","text":"object S3 class GlmBayesMfp.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/glmBayesMfp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian model inference for fractional polynomial GLMs and Cox models — glmBayesMfp","text":"formula form y ~ bfp (x1, max = 4) + uc (x2 + x3), , auxiliary functions bfp uc must used defining fractional polynomial uncertain fixed form covariates terms, respectively. must intercept, fixed covariates allowed. max arguments bfp terms must identical. y response vector GLMs vector survival times Cox regression. Note Cox regression implemented TBFs. prior specifications list: gPrior g-prior class object. Defaults hyper-g prior. See   GPrior information. modelPrior choose flat model prior (\"flat\"),   model prior favoring sparse models explicitly (default, \"sparse\"),   dependent model prior (\"dependent\") used. method = \"ask\", user prompted maximum cardinality model space can decide whether use posterior sampling exhaustive model space evaluation. Note specify one FP term, exhaustive model search must done, due structure model sampling algorithm. However, reality problem model space typically small.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/glmBfp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian inference for fractional polynomial models from the GLM and Cox family — glmBfp-package","title":"Bayesian inference for fractional polynomial models from the GLM and Cox family — glmBfp-package","text":"Implements Bayesian paradigm fractional polynomials generalized linear models, described Held, Sabanes Bove, Gravestock(2015) doi:10.1214/14-STS510  Cox models described Held, Gravestock, Sabanes Bove (2016) doi:10.1002/sim.7090 . See package 'bfp' treatment normal models.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/glmBfp-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian inference for fractional polynomial models from the GLM and Cox family — glmBfp-package","text":"Leonhard Held, Daniel Sabanés Bové, Isaac Gravestock. \"Approximate Bayesian model selection deviance statistic.\" Statistical Science (2015): 242-257. Leonhard Held, Isaac Gravestock, Daniel Sabanés Bové. \"Objective Bayesian model selection Cox regression.\" Statistics medicine 35.29 (2016): 5376-5390.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/glmBfp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian inference for fractional polynomial models from the GLM and Cox family — glmBfp-package","text":"Maintainer: Isaac Gravestock isaac.gravestock@gmail.com Authors: Daniel Sabanes Bove contributors: David Maisonave [contributor] Terry Therneau [contributor] R Core Team [contributor]","code":""},{"path":"https://igrave.github.io/glmBfp/reference/inclusionProbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute posterior inclusion probabilites based on GlmBayesMfp object — inclusionProbs","title":"Compute posterior inclusion probabilites based on GlmBayesMfp object — inclusionProbs","text":"Compute (model averaged) posterior inclusion probabilites uncertain variables (including FP variables) based GlmBayesMfp object.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/inclusionProbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute posterior inclusion probabilites based on GlmBayesMfp object — inclusionProbs","text":"","code":"inclusionProbs(   GlmBayesMfpObject,   postProbs = posteriors(GlmBayesMfpObject, type = \"normalized\") )"},{"path":"https://igrave.github.io/glmBfp/reference/inclusionProbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute posterior inclusion probabilites based on GlmBayesMfp object — inclusionProbs","text":"GlmBayesMfpObject GlmBayesMfp object postProbs vector posterior model probabilities, defaults normalized probabilities GlmBayesMfpObject","code":""},{"path":"https://igrave.github.io/glmBfp/reference/inclusionProbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute posterior inclusion probabilites based on GlmBayesMfp object — inclusionProbs","text":"resulting inclusion probabilities vector","code":""},{"path":"https://igrave.github.io/glmBfp/reference/is.bool.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicate checking for a boolean option — is.bool","title":"Predicate checking for a boolean option — is.bool","text":"Predicate checking boolean option","code":""},{"path":"https://igrave.github.io/glmBfp/reference/is.bool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicate checking for a boolean option — is.bool","text":"","code":"is.bool(x)"},{"path":"https://igrave.github.io/glmBfp/reference/is.bool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicate checking for a boolean option — is.bool","text":"x object checked","code":""},{"path":"https://igrave.github.io/glmBfp/reference/is.bool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicate checking for a boolean option — is.bool","text":"Returns TRUE x length one logical vector (.e., scalar)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/is.bool.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predicate checking for a boolean option — is.bool","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/logMargLiks.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the log marginal likelihood estimates from a GlmBayesMfp object — logMargLiks","title":"Extract the log marginal likelihood estimates from a GlmBayesMfp object — logMargLiks","text":"Extract log marginal likelihood estimates GlmBayesMfp object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/logMargLiks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the log marginal likelihood estimates from a GlmBayesMfp object — logMargLiks","text":"","code":"logMargLiks(GlmBayesMfpObject)"},{"path":"https://igrave.github.io/glmBfp/reference/logMargLiks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the log marginal likelihood estimates from a GlmBayesMfp object — logMargLiks","text":"GlmBayesMfpObject object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/logMargLiks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the log marginal likelihood estimates from a GlmBayesMfp object — logMargLiks","text":"vector log marginal likelihood estimates","code":""},{"path":"https://igrave.github.io/glmBfp/reference/logPriors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the log prior values from a GlmBayesMfp object — logPriors","title":"Extract the log prior values from a GlmBayesMfp object — logPriors","text":"Extract log prior values GlmBayesMfp object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/logPriors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the log prior values from a GlmBayesMfp object — logPriors","text":"","code":"logPriors(GlmBayesMfpObject)"},{"path":"https://igrave.github.io/glmBfp/reference/logPriors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the log prior values from a GlmBayesMfp object — logPriors","text":"GlmBayesMfpObject object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/logPriors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the log prior values from a GlmBayesMfp object — logPriors","text":"vector log prior values","code":""},{"path":"https://igrave.github.io/glmBfp/reference/plotCurveEstimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting a fractional polynomial curve estimate — plotCurveEstimate","title":"Function for plotting a fractional polynomial curve estimate — plotCurveEstimate","text":"Plot fractional polynomial curve estimate using samples single GLM / Cox model model average.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/plotCurveEstimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting a fractional polynomial curve estimate — plotCurveEstimate","text":"","code":"plotCurveEstimate(   samples,   termName,   plevel = 0.95,   slevel = plevel,   plot = TRUE,   rug = FALSE,   addZeros = FALSE,   ... )"},{"path":"https://igrave.github.io/glmBfp/reference/plotCurveEstimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting a fractional polynomial curve estimate — plotCurveEstimate","text":"samples object class GlmBayesMfpSamples, produced sampleGlm sampleBma. termName string denoting FP term, written .data.frame method plevel credible level pointwise HPD, NULL means pointwise HPD (default: 0.95). pointwise intervals plotted blue color. slevel credible level simultaneous credible band (SCB), NULL means SCB (defaults plevel). simultaneous intervals plotted green color. plot FALSE, return values needed produce plot, plot (default TRUE, plot made) rug add rug plot? (default: FALSE) addZeros include zero samples models covariate included? (default: FALSE) TRUE, changes interpretation samples, therefore curve estimates based samples: longer conditional inclusion covariate, marginally models, also including covariate. ... arguments plotting matplot","code":""},{"path":"https://igrave.github.io/glmBfp/reference/plotCurveEstimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting a fractional polynomial curve estimate — plotCurveEstimate","text":"list various plotting information: original grid original covariate scale grid grid transformed scale mean pointwise mean curve values plower lower boundaries pointwise HPD pupper upper boundaries pointwise HPD slower lower boundaries SCB supper upper boundaries SCB obsVals observed values covariate original scale partialResids implemented: partial residuals transform vector shift scale parameter","code":""},{"path":"https://igrave.github.io/glmBfp/reference/posteriors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior model probability estimates from a GlmBayesMfp object — posteriors","title":"Extract posterior model probability estimates from a GlmBayesMfp object — posteriors","text":"Extract posterior model probability estimates GlmBayesMfp object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/posteriors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior model probability estimates from a GlmBayesMfp object — posteriors","text":"","code":"posteriors(GlmBayesMfpObject, type = c(\"normalized\", \"sampling\"))"},{"path":"https://igrave.github.io/glmBfp/reference/posteriors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior model probability estimates from a GlmBayesMfp object — posteriors","text":"GlmBayesMfpObject object type type posterior model probability estimates extracted GlmBayesMfpObject","code":""},{"path":"https://igrave.github.io/glmBfp/reference/posteriors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior model probability estimates from a GlmBayesMfp object — posteriors","text":"requested probs models","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.BMA.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction methods for CoxTBF objects for BMA models — predict.TBFcox.BMA","title":"Prediction methods for CoxTBF objects for BMA models — predict.TBFcox.BMA","text":"Predicts survival probabilities given times. Compatible predictSurvProb functions required pec package. Predicts BMA objects.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.BMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction methods for CoxTBF objects for BMA models — predict.TBFcox.BMA","text":"","code":"# S3 method for class 'TBFcox.BMA' predict(object, newdata, times, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.BMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction methods for CoxTBF objects for BMA models — predict.TBFcox.BMA","text":"object model fitted coxTBF newdata dataframe variables original data used fit object times vector times predict survival probability ... used.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.BMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction methods for CoxTBF objects for BMA models — predict.TBFcox.BMA","text":"data frame survival probabilities rows row newdata columns time.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction methods for CoxTBF objects — predict.TBFcox","title":"Prediction methods for CoxTBF objects — predict.TBFcox","text":"Predicts survival probabilities given times. Compatible predictSurvProb functions required pec package.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction methods for CoxTBF objects — predict.TBFcox","text":"","code":"# S3 method for class 'TBFcox' predict(object, newdata, times, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction methods for CoxTBF objects — predict.TBFcox","text":"object model fitted coxTBF newdata dataframe variables original data used fit object times vector times predict survival probability ... used.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction methods for CoxTBF objects — predict.TBFcox","text":"data frame survival probabilities rows row newdata columns time.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction methods for CoxTBF objects with separate estimates — predict.TBFcox.sep","title":"Prediction methods for CoxTBF objects with separate estimates — predict.TBFcox.sep","text":"Predicts survival probabilities given times. Compatible predictSurvProb functions required pec package. Predicts objects fitted sep=TRUE","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction methods for CoxTBF objects with separate estimates — predict.TBFcox.sep","text":"","code":"# S3 method for class 'TBFcox.sep' predict(object, newdata, times, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction methods for CoxTBF objects with separate estimates — predict.TBFcox.sep","text":"object model fitted coxTBF newdata dataframe variables original data used fit object times vector times predict survival probability ... used.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/predict.TBFcox.sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction methods for CoxTBF objects with separate estimates — predict.TBFcox.sep","text":"data frame survival probabilities rows row newdata columns time.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/print.GlmBayesMfp.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a GlmBayesMfp object. — print.GlmBayesMfp","title":"Print a GlmBayesMfp object. — print.GlmBayesMfp","text":"Print GlmBayesMfp object.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/print.GlmBayesMfp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a GlmBayesMfp object. — print.GlmBayesMfp","text":"","code":"# S3 method for class 'GlmBayesMfp' print(x, ...)"},{"path":"https://igrave.github.io/glmBfp/reference/print.GlmBayesMfp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a GlmBayesMfp object. — print.GlmBayesMfp","text":"x valid GlmBayesMfp object ... unused","code":""},{"path":"https://igrave.github.io/glmBfp/reference/print.GlmBayesMfp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a GlmBayesMfp object. — print.GlmBayesMfp","text":"used side effect","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/print.GlmBayesMfp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print a GlmBayesMfp object. — print.GlmBayesMfp","text":"Daniel Sabanes Bove daniel.sabanesbove@ifspm.uzh.ch","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleBma.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce posterior samples from a Bayesian model average over GLMs / Cox models — sampleBma","title":"Produce posterior samples from a Bayesian model average over GLMs / Cox models — sampleBma","text":"Based result list glmBayesMfp, sample Bayesian model average (BMA) models contained list.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleBma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce posterior samples from a Bayesian model average over GLMs / Cox models — sampleBma","text":"","code":"sampleBma(   object,   mcmc = McmcOptions(),   postProbs = posteriors(object),   nMargLikSamples = NULL,   verbose = TRUE,   ... )"},{"path":"https://igrave.github.io/glmBfp/reference/sampleBma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce posterior samples from a Bayesian model average over GLMs / Cox models — sampleBma","text":"object valid GlmBayesMfp object containing models average mcmc MCMC options object class McmcOptions, specifying number required BMA samples (via sampleSize(mcmc)), burn-thinning parameters applied model (see ). TBF used, sample accepted, number samples given sampleSize(mcmc). postProbs vector posterior probabilites (normalized within function) weighting models object (defaults normalized posterior probabilities) nMargLikSamples non-NULL, specified number samples used marginal likelihood estimate model (see ). verbose information computation progress given? (default) ... optional arguments already available sampling single model: gridList, gridSize, newdata, weights, marginalZApprox, debug, useOpenMP. See sampleGlm meanings.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleBma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce posterior samples from a Bayesian model average over GLMs / Cox models — sampleBma","text":"result list following elements: modelData data frame containing result .data.frame function, addition BMA probabilities, BMA frequencies sample, acceptance ratios MCMC runs optionally marginal likelihood estimates / standard errors. samples object S4 class GlmBayesMfpSamples containing samples BMA.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleBma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce posterior samples from a Bayesian model average over GLMs / Cox models — sampleBma","text":"TBF methodology used (specified within glmBayesMfp object), Monte Carlo (MC) sampling used. fully Bayesian, generalized hyper-g prior methodology used, sampling based MCMC. Therefore, instead specifying required number samples model probabilities, one also needs specify burn-length thinning parameter, applied every model least one sample included average. Alternatively, can ask MCMC marginal likelihood estimates models list. least nMargLikSamples produced model, whether included BMA sample .","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleGlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce posterior samples from one GLM / Cox model — sampleGlm","title":"Produce posterior samples from one GLM / Cox model — sampleGlm","text":"Based result list glmBayesMfp, first model list MCMC samples produced. parallel sampling coefficients FP curve points, optionally marginal likelihood model estimated MCMC samples. provides check integrated Laplace approximation used model sampling. TBF methodology used, MCMC necessary, instead ordinary Monte Carlo samples approximate posterior distribution obtained.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleGlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce posterior samples from one GLM / Cox model — sampleGlm","text":"","code":"sampleGlm(   object,   mcmc = McmcOptions(),   estimateMargLik = TRUE,   gridList = list(),   gridSize = 203L,   newdata = NULL,   fixedZ = NULL,   marginalZApprox = NULL,   verbose = TRUE,   debug = FALSE,   useOpenMP = TRUE,   correctedCenter = FALSE )"},{"path":"https://igrave.github.io/glmBfp/reference/sampleGlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce posterior samples from one GLM / Cox model — sampleGlm","text":"object GlmBayesMfp object, first model processed (least now ...) mcmc MCMC options object class McmcOptions. TBF used, sample accepted, number samples given sampleSize(mcmc). estimateMargLik shall marginal likelihood estimated parallel? (default) effect full Bayes TBF used. gridList optional list appropriately named grid vectors FP evaluation. Default length (gridSize - 2) grid per covariate additional observed values (two endpoints) gridSize see (default: 203) newdata new covariate data.frame exactly names (preferably ranges) (default: new covariate data) Note option offsets new data moment. Just add offsets predictions slot samples return list . fixedZ either NULL (default) (single) fixed z value used, order sample conditional posterior given z. object constructed empirical Bayes machinery, default estimated z maximum conditional marginal likelihood. object constructed option fixedg, fixed value used default. marginalZApprox method approximating marginal density log covariance factor z, see getMarginalZ details (default: preference list getMarginalZ) TBF used conjunction incomplete inverse gamma hyperprior g = exp(z), posterior distribution g form. Therefore option effect case, samples directly obtained posterior distribution. verbose information computation progress given? (default) debug print debugging information? (default) useOpenMP shall OpenMP used accelerate computations? (default) correctedCenter TRUE predict new data based centering original data.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleGlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce posterior samples from one GLM / Cox model — sampleGlm","text":"Returns list following elements: samples object S4 class GlmBayesMfpSamples coefficients samples original coefficients model (nCoefs x nSamples) acceptanceRatio proportion accepted Metropolis-Hastings proposals logMargLik estimateMargLik TRUE, list included: contains elements numeratorTerms denominatorTerms numerator denominator samples Chib Jeliazkov marginal likelihood estimate, highDensityPointLogUnPosterior log unnormalized posterior density fixed parameter resulting estimate standardError.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of samples for a given MCMC options triple — sampleSize","title":"Compute the number of samples for a given MCMC options triple — sampleSize","text":"Compute number samples given MCMC options triple","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of samples for a given MCMC options triple — sampleSize","text":"","code":"sampleSize(mcmcOptions)"},{"path":"https://igrave.github.io/glmBfp/reference/sampleSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of samples for a given MCMC options triple — sampleSize","text":"mcmcOptions McmcOptions object","code":""},{"path":"https://igrave.github.io/glmBfp/reference/sampleSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the number of samples for a given MCMC options triple — sampleSize","text":"resulting sample size","code":""},{"path":"https://igrave.github.io/glmBfp/reference/scrHpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an SCB from a samples matrix — scrHpd","title":"Calculate an SCB from a samples matrix — scrHpd","text":"Calculate SCB samples matrix, minimizes absolute distances contained samples mode vector, gridpoint. Therefore SCB might considered “HPD SCB”.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/scrHpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an SCB from a samples matrix — scrHpd","text":"","code":"scrHpd(samples, mode = apply(samples, 1, median), level = 0.95)"},{"path":"https://igrave.github.io/glmBfp/reference/scrHpd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an SCB from a samples matrix — scrHpd","text":"samples m n matrix m number parameters, n number samples  hence (multivariate) sample column matrix samples mode mode vector length m (defaults vector medians) level credible level SCB (default: 0.95)","code":""},{"path":"https://igrave.github.io/glmBfp/reference/scrHpd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an SCB from a samples matrix — scrHpd","text":"matrix columns “lower” “upper”, lower upper SCB bounds, respectively.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/scrHpd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate an SCB from a samples matrix — scrHpd","text":"Besag, J.; Green, P.; Higdon, D. & Mengersen, K. (1995):  “Bayesian computation stochastic systems (  discussion)”, Statistical Science, 10, 3-66.","code":""},{"path":[]},{"path":"https://igrave.github.io/glmBfp/reference/testCox.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the Cox model computation for the TBF approach — testCox","title":"Test the Cox model computation for the TBF approach — testCox","text":"Test Cox model computation TBF approach","code":""},{"path":"https://igrave.github.io/glmBfp/reference/testCox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the Cox model computation for the TBF approach — testCox","text":"","code":"testCox(   survTimes,   censInd,   offsets = rep.int(0, length(survTimes)),   X,   useCppCode = FALSE )"},{"path":"https://igrave.github.io/glmBfp/reference/testCox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the Cox model computation for the TBF approach — testCox","text":"survTimes survival times censInd logical censoring indicator (TRUE = observed, FALSE = censored survival times) offsets known component included linear predictor fitting. must numeric vector length equal number cases (provided, vector zeroes) X design matrix, *without* intercept 1's!, least one column useCppCode use C++ code? (default) otherwise R-function coxph used","code":""},{"path":"https://igrave.github.io/glmBfp/reference/testCox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test the Cox model computation for the TBF approach — testCox","text":"list coefficient estimates (betas), covariance matrix estimate (cov) residual deviance (deviance).","code":""},{"path":"https://igrave.github.io/glmBfp/reference/testCox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test the Cox model computation for the TBF approach — testCox","text":"Daniel Sabanes Bove","code":""},{"path":"https://igrave.github.io/glmBfp/reference/writeFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a survival formula based on a glmBfp object with censInd not null. — writeFormula","title":"Construct a survival formula based on a glmBfp object with censInd not null. — writeFormula","text":"internal function construct survival formula based glmBfp object censInd null.","code":""},{"path":"https://igrave.github.io/glmBfp/reference/writeFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a survival formula based on a glmBfp object with censInd not null. — writeFormula","text":"","code":"writeFormula(models.listpart, time.var, status.var)"},{"path":"https://igrave.github.io/glmBfp/reference/writeFormula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a survival formula based on a glmBfp object with censInd not null. — writeFormula","text":"models.listpart glmBfp object construct survival formula time.var name time variable character string status.var name censoring indicator variable character string","code":""},{"path":"https://igrave.github.io/glmBfp/reference/writeFormula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a survival formula based on a glmBfp object with censInd not null. — writeFormula","text":"formula object based glmBfp object.","code":""}]
